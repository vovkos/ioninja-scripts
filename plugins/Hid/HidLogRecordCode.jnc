//..............................................................................
//
// HID log record codes
//

import "log_RecordCode.jnc"

//..............................................................................

enum HidLogRecordCode: uint64_t {
	Open              = 0x01d9d57271fc2800 | log.RecordCodeFlags.Foldable,
	OpenError         = 0x01d9d57271fc2801,
	Close             = 0x01d9d57271fc2802,
	ReportDescriptor  = 0x01d9d57271fc2803 | log.RecordCodeFlags.Foldable,
	InputReport       = 0x01d9d57271fc2804,
	OutputReport      = 0x01d9d57271fc2805,
	GetFeatureReport  = 0x01d9d57271fc2806,
	SendFeatureReport = 0x01d9d57271fc2807,
	UnknownReport     = 0x01d9d57271fc2808,
}

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct OpenParams {
	uint16_t m_releaseNumber;
	uint16_t m_vendorId;
	uint16_t m_productId;
	uint16_t m_usagePage;
	uint16_t m_usage;
	uint8_t m_interfaceId;
	uint8_t m_busType; // io.HidBusKind
}

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct Report {
	uint8_t m_reportKind; // io.HidReportKind
	uint8_t m_reportId;
	uint16_t m_reportDescSize;
	// followed by report mini-desc (m_reportDescSize)
	// followed by report bytes
}

//..............................................................................
